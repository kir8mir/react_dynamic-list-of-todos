{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","Loader","className","TodoModal","modalOn","setModalOn","currentTodo","useState","name","id","email","phone","currentUser","setCurrentUser","isLoading","setIsLoading","useEffect","userId","finally","classnames","type","onClick","title","completed","href","TodoList","todos","setCurrentTodo","slachEye","setSlashEye","map","todo","modalHandler","TodoFilter","setSortedTodos","search","setSearch","sortBy","setSortBy","isIncludes","toLowerCase","includes","filter","onChange","event","target","value","placeholder","style","pointerEvents","App","setTodos","sortedTodos","isLoaded","setIsLoaded","a","users","takeUsers","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0fb5aab.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  setModalOn: (state: boolean) => void;\n  currentTodo: Todo;\n  modalOn: boolean;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  modalOn,\n  setModalOn,\n  currentTodo,\n}) => {\n  const [currentUser, setCurrentUser] = useState<User>({\n    name: 'no user',\n    id: 0,\n    email: 'no email',\n    phone: 'no phone',\n  });\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(currentTodo.userId)\n      .then(json => {\n        setCurrentUser(json);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div\n      className={classnames('modal', { 'is-active': modalOn })}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setModalOn(false)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoModal } from '../TodoModal/TodoModal';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const [modalOn, setModalOn] = useState(false);\n  const [currentTodo, setCurrentTodo] = useState<Todo>(todos[0]);\n  const [slachEye, setSlashEye] = useState(false);\n\n  const modalHandler = (todo: Todo) => {\n    setModalOn(true);\n    setCurrentTodo(todo);\n    setSlashEye(!slachEye);\n  };\n\n  return (\n    <>\n      {modalOn\n        && (\n          <TodoModal\n            modalOn={modalOn}\n            setModalOn={setModalOn}\n            currentTodo={currentTodo}\n          />\n        )}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map(todo => (\n            <tr\n              className={classnames({ 'has-background-info-light': modalOn })}\n              data-cy=\"todo\"\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i\n                    className={classnames(\n                      'fas',\n                      { 'fa-check': todo.completed },\n                    )}\n                  />\n                </span>\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classnames(\n                    { 'has-text-success': todo.completed },\n                    { 'has-text-danger': !todo.completed },\n                  )}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => modalHandler(todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classnames(\n                        'far',\n                        'fa-eye',\n                        {\n                          'fa-eye-slash': modalOn\n                            && todo.id === currentTodo.id,\n                        },\n                      )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  setSortedTodos: (todo: Todo[]) => void;\n}\n\nexport const TodoFilter: FC<Props> = ({\n  setSortedTodos,\n  todos,\n}) => {\n  const [search, setSearch] = useState('');\n  const [sortBy, setSortBy] = useState('all');\n\n  const isIncludes = (title: string) => {\n    return title.toLowerCase().includes(search);\n  };\n\n  const filter = () => {\n    switch (sortBy) {\n      case 'active':\n        setSortedTodos(todos.filter(todo => !todo.completed\n          && isIncludes(todo.title)));\n        break;\n      case 'completed':\n        setSortedTodos(todos.filter(todo => todo.completed\n          && isIncludes(todo.title)));\n        break;\n      default: setSortedTodos(todos\n        .filter(todo => isIncludes(todo.title)));\n    }\n  };\n\n  useEffect(() => {\n    filter();\n  }, [search, sortBy]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={event => {\n              setSortBy(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={search}\n          onChange={event => {\n            setSearch(event.target.value.toLowerCase());\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {search\n            && (\n              // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setSearch('')}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [sortedTodos, setSortedTodos] = useState<Todo[]>(todos);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  async function takeUsers() {\n    const users = await getTodos();\n\n    try {\n      setTodos(users);\n      setSortedTodos(users);\n    } finally {\n      setIsLoaded(true);\n    }\n  }\n\n  useEffect(() => {\n    takeUsers();\n  }, []);\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <div className=\"box\">\n          <h1 className=\"title\">Todos:</h1>\n\n          <div className=\"block\">\n            <TodoFilter\n              todos={todos}\n              setSortedTodos={setSortedTodos}\n            />\n          </div>\n\n          <div className=\"block\">\n            {isLoaded ? <TodoList todos={sortedTodos} /> : <Loader />}\n            {!sortedTodos.length && <strong>None such TODO</strong>}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}